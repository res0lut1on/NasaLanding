// <auto-generated />
using System;
using BackendTestTask.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackendTestTask.Database.Migrations
{
    [DbContext(typeof(BackendTestTaskContext))]
    partial class BackendTestTaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackendTestTask.Database.Entities.Meteorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fall")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("GeoLatitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("GeoLongitude")
                        .HasColumnType("double precision");

                    b.Property<string>("GeoType")
                        .HasColumnType("text");

                    b.Property<double>("Mass")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Reclat")
                        .HasColumnType("double precision");

                    b.Property<double?>("Reclong")
                        .HasColumnType("double precision");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Class");

                    b.HasIndex("Year");

                    b.ToTable("Meteorites");
                });
#pragma warning restore 612, 618
        }
    }
}
